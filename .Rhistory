all_imputation_methods = all_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
poisened_imputation_methods = poisened_imputation_methods )
ImputationMethods
ImputationRepetitions
RepeatedSampleImputations
# Look at bad imputations
Zdeltas <- retrieveZdeltas( RepeatedSampleImputations = RepeatedSampleImputations,
all_imputation_methods = all_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
poisened_imputation_methods = poisened_imputation_methods )
pZdeltasPlotAvgerage <- createBarplotMeanZDeltas(
ImputationZDeltaInsertedMissingsRaw = Zdeltas$ImputationZDeltaInsertedMissings,
poisened_imputation_methods = poisened_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods
)
pGMCPlotAvgerage <- createBarplotMeanGMCs(
ImputationZDeltaInsertedMissingsRaw = Zdeltas$ImputationZDeltaInsertedMissings,
poisened_imputation_methods = poisened_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods
)
pZdeltasPDEraw <- createPDERawZDeltas(
multivarZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsMultivarV,
univarZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsUnivarV,
poisenedZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsPoisenedV,
perfectZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsPerfectV
)
pGMCPlotAvgerage <- createBarplotMeanGMCs(
ImputationZDeltaInsertedMissingsRaw = Zdeltas$ImputationZDeltaInsertedMissings,
poisened_imputation_methods = poisened_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods
)
pZdeltasPlotAvgerage
# Function to retrieve diagnostic Zdelta values from the evaluations
# Helper function for data frame creation
generatePlotDataFrame <- function( rowmeans, poisened, univariate, perfect ) {
df <- data.frame( reshape2::melt( rowmeans ) )
df$Method <- gsub( " imputed", "", rownames( df ) )
df$color <- "dodgerblue"
df$color[df$Method %in% gsub( " imputed", "", poisened )] <- "red"
df$color[df$Method %in% gsub( " imputed", "", univariate )] <- "gold"
df$color[df$Method %in% gsub( " imputed", "", perfect )] <- "chartreuse2"
return( df )
}
# Function to retrieve Zdelta values from iterations
retrieveZdeltas <- function( RepeatedSampleImputations, all_imputation_methods, univariate_imputation_methods, poisened_imputation_methods ) {
# Helper function to reduce duplication
getImputationZDeltaSubset <- function( x, Methods ) {
lapply( x, function( y ) y[grep( paste( as.character( Methods ), sep = "' '", collapse = "|" ), row.names( y ) ),] )
}
# Main
ImputationZDeltaInsertedMissings <- lapply( RepeatedSampleImputations, function( x ) x[["ImputationZDeltaInsertedMissings"]] )
meanImputationZDeltaInsertedMissings <- Reduce( "+", ImputationZDeltaInsertedMissings ) / length( ImputationZDeltaInsertedMissings )
rowmeanImputationZDeltaInsertedMissings <- rowMeans( meanImputationZDeltaInsertedMissings )
ImputationZDeltaInsertedMissingsMultivarV <- unlist( getImputationZDeltaSubset( ImputationZDeltaInsertedMissings, multivariate_imputation_methods ) )
ImputationZDeltaInsertedMissingsUnivarV <- unlist( getImputationZDeltaSubset( ImputationZDeltaInsertedMissings, univariate_imputation_methods ) )
ImputationZDeltaInsertedMissingsPoisenedV <- unlist( getImputationZDeltaSubset( ImputationZDeltaInsertedMissings, poisened_imputation_methods ) )
ImputationZDeltaInsertedMissingsPerfectV <- unlist( getImputationZDeltaSubset( ImputationZDeltaInsertedMissings, perfect_imputation_methods ) )
return( list(
ImputationZDeltaInsertedMissings = ImputationZDeltaInsertedMissings,
meanImputationZDeltaInsertedMissings = meanImputationZDeltaInsertedMissings,
rowmeanImputationZDeltaInsertedMissings = rowmeanImputationZDeltaInsertedMissings,
ImputationZDeltaInsertedMissingsMultivarV = ImputationZDeltaInsertedMissingsMultivarV,
ImputationZDeltaInsertedMissingsUnivarV = ImputationZDeltaInsertedMissingsUnivarV,
ImputationZDeltaInsertedMissingsPoisenedV = ImputationZDeltaInsertedMissingsPoisenedV,
ImputationZDeltaInsertedMissingsPerfectV = ImputationZDeltaInsertedMissingsPerfectV
) )
}
# Function to create a bar plot of mean Zdelta values from iterations
createBarplotMeanZDeltas <- function( ImputationZDeltaInsertedMissingsRaw, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods ) {
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
rowmeanImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) mean( as.vector( x ), na.rm = TRUE ) )
# Data frame creation
df4plot_long <- generatePlotDataFrame( rowmeanImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
minpoisened <- min( df4plot_long$value[df4plot_long$color %in% "red"], na.rm = TRUE )
minScalar <- min( df4plot_long$value[df4plot_long$color %in% "gold"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate" ), y = c( minpoisened, minScalar ), x = 3, color = c( "salmon", "orange" ) )
# Plotting
BarplotMeanZDeltas <-
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ), labels = c( "Multivariate", "Univariate", "Poisened", "Perfect" ) ) +
geom_hline( yintercept = minpoisened, color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = minScalar, color = "orange", linetype = "dotdash" ) +
annotate( geom = "text", x = dfAnnotate$x, y = dfAnnotate$y + 0.015, label = dfAnnotate$Methods, color = dfAnnotate$color )
if ( !sum( is.na( df4plot_long$Failed ) ) == nrow( df4plot_long ) ) {
BarplotMeanZDeltas <- BarplotMeanZDeltas + geom_point( aes( x = Method, y = Failed ), pch = 4 )
}
return( BarplotMeanZDeltas )
}
# Function to create a bar plot of mean GMC values from iterations
createBarplotMeanGMCs <- function( ImputationZDeltaInsertedMissingsRaw, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods ) {
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
GMCImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) skewnessGM( as.vector( x ) ) )
# Data frame creation
df4plot_long <- generatePlotDataFrame( GMCImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
maxpoisened <- max( df4plot_long$value[df4plot_long$color %in% "red"], na.rm = TRUE )
maxScalar <- max( df4plot_long$value[df4plot_long$color %in% "gold"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate", "GMC limit" ), y = c( maxpoisened, maxScalar, 0.4 ), x = 3, color = c( "salmon", "orange", "darkgreen" ) )
# Plotting
BarplotMeanGMC <-
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "GMC (means)", y = "GMC", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ), labels = c( "Multivariate", "Univariate", "Poisened", "Perfect" ) ) +
geom_hline( yintercept = maxpoisened, color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = maxScalar, color = "orange", linetype = "dotdash" ) +
geom_hline( yintercept = 0.4, color = "darkgreen" ) +
annotate( geom = "text", x = dfAnnotate$x, y = dfAnnotate$y + 0.015, label = dfAnnotate$Methods, color = dfAnnotate$color )
if ( !sum( is.na( df4plot_long$Failed ) ) == nrow( df4plot_long ) ) {
BarplotMeanGMC <- BarplotMeanGMC + geom_point( aes( x = Method, y = Failed ), pch = 4 )
}
return( BarplotMeanGMC )
}
# Function to create PDE plot of raw Zdelta values from iterations
createPDERawZDeltas <- function( multivarZDeltas, univarZDeltas, poisenedZDeltas, perfectZDeltas ) {
vZDeltas <- c( multivarZDeltas, univarZDeltas, poisenedZDeltas, perfectZDeltas )
namesvZDeltas <- c( rep( "Multivariate", length( multivarZDeltas ) ),
rep( "Univariate", length( univarZDeltas ) ),
rep( "Poisened", length( poisenedZDeltas ) ),
rep( "Perfect", length( perfectZDeltas ) ) )
df4plot_long <- cbind.data.frame( Category = namesvZDeltas, Zdelta = vZDeltas )
# Calculate PDE xy
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, y = Pareto$paretoDensity )
return( dfPareto )
} )
dfParetoAll <- do.call( rbind.data.frame, ParetoDistributions )
PDERawZDeltas <- ggplot( data = dfParetoAll, aes( x = x, y = y, color = Category ) ) +
geom_line( ) +
theme_light( ) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_rect( colour = "transparent", fill = ggplot2::alpha( "white", 0.4 ) )
) +
labs( title = "PDE of raw Zdelta values", x = "Data", y = "PDE" ) +
scale_color_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ), labels = c( "Multivariate", "Univariate", "Poisened", "Perfect" ) )
skewnessGMZDeltaInsertedMissingsMultivarV <- round( skewnessGM( multivarZDeltas ), 3 )
skewnessGMZDeltaInsertedMissingsUnivarV <- round( skewnessGM( univarZDeltas ), 3 )
skewnessGMZDeltaInsertedMissingsPoisenedV <- round( skewnessGM( poisenedZDeltas ), 3 )
skewnessGMZDeltaInsertedMissingsPerfectV <- round( skewnessGM( perfectZDeltas ), 3 )
PDERawZDeltas <- PDERawZDeltas +
annotate( "text", x = Inf, y = Inf, hjust = 1.1, vjust = 1.1,
label = paste0( "GMC\n", "Multivariate: ", skewnessGMZDeltaInsertedMissingsMultivarV, "\n",
"Univariate: ", skewnessGMZDeltaInsertedMissingsUnivarV, "\n",
"Poisened: ", skewnessGMZDeltaInsertedMissingsPoisenedV, "\n",
"Perfect: ", skewnessGMZDeltaInsertedMissingsPerfectV ) )
return( PDERawZDeltas )
}
pZdeltasPlotAvgerage <- createBarplotMeanZDeltas(
ImputationZDeltaInsertedMissingsRaw = Zdeltas$ImputationZDeltaInsertedMissings,
poisened_imputation_methods = poisened_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods
)
pZdeltasPlotAvgerage
ImputationZDeltaInsertedMissingsRaw = Zdeltas$ImputationZDeltaInsertedMissings
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
GMCImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) skewnessGM( as.vector( x ) ) )
df4plot_long <- generatePlotDataFrame( GMCImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
maxpoisened <- max( df4plot_long$value[df4plot_long$color %in% "red"], na.rm = TRUE )
maxScalar <- max( df4plot_long$value[df4plot_long$color %in% "gold"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate", "GMC limit" ), y = c( maxpoisened, maxScalar, 0.4 ), x = 3, color = c( "salmon", "orange", "darkgreen" ) )
df4plot_long
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "GMC (means)", y = "GMC", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ), labels = c( "Multivariate", "Univariate", "Poisened", "Perfect" ) ) +
geom_hline( yintercept = maxpoisened, color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = maxScalar, color = "orange", linetype = "dotdash" ) +
geom_hline( yintercept = 0.4, color = "darkgreen" ) +
annotate( geom = "text", x = dfAnnotate$x, y = dfAnnotate$y + 0.015, label = dfAnnotate$Methods, color = dfAnnotate$color )
df4plot_long
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
)
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
)
# Function to retrieve diagnostic Zdelta values from the evaluations
# Helper function for data frame creation
generatePlotDataFrame <- function( rowmeans, poisened, univariate, perfect ) {
df <- data.frame( reshape2::melt( rowmeans ) )
df$Method <- gsub( " imputed", "", rownames( df ) )
df$color <- "Multivariate"
df$color[df$Method %in% gsub( " imputed", "", poisened )] <- "Poisened"
df$color[df$Method %in% gsub( " imputed", "", univariate )] <- "Univariate"
df$color[df$Method %in% gsub( " imputed", "", perfect )] <- "Perfect"
return( df )
}
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
rowmeanImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) mean( as.vector( x ), na.rm = TRUE ) )
# Data frame creation
df4plot_long <- generatePlotDataFrame( rowmeanImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
minpoisened <- min( df4plot_long$value[df4plot_long$color %in% "Poisened"], na.rm = TRUE )
minScalar <- min( df4plot_long$value[df4plot_long$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate" ), y = c( minpoisened, minScalar ), x = 3, color = c( "salmon", "orange" ) )
df4plot_long
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
)
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ) )
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "chartreuse3", "gold", "red"  ) )
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "chartreuse3", "red", "gold" ) )
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
GMCImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) skewnessGM( as.vector( x ) ) )
# Data frame creation
df4plot_long <- generatePlotDataFrame( GMCImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
maxpoisened <- max( df4plot_long$value[df4plot_long$color %in% "Poisened"], na.rm = TRUE )
maxScalar <- max( df4plot_long$value[df4plot_long$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate", "GMC limit" ),
y = c( maxpoisened, maxScalar, 0.4 ), x = 3, color = c( "salmon", "orange", "darkgreen" ) )
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "GMC (means)", y = "GMC", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "chartreuse3", "red", "gold" ) )
vZDeltas <- c( multivarZDeltas, univarZDeltas, poisenedZDeltas, perfectZDeltas )
multivarZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsMultivarV
univarZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsUnivarV
poisenedZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsPoisenedV
perfectZDeltas = Zdeltas$ImputationZDeltaInsertedMissingsPerfectV
vZDeltas <- c( multivarZDeltas, univarZDeltas, poisenedZDeltas, perfectZDeltas )
namesvZDeltas <- c( rep( "Multivariate", length( multivarZDeltas ) ),
rep( "Univariate", length( univarZDeltas ) ),
rep( "Poisened", length( poisenedZDeltas ) ),
rep( "Perfect", length( perfectZDeltas ) ) )
df4plot_long <- cbind.data.frame( Category = namesvZDeltas, Zdelta = vZDeltas )
# Calculate PDE xy
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, y = Pareto$paretoDensity )
return( dfPareto )
} )
perfectZDeltas
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, y = Pareto$paretoDensity )
return( dfPareto )
} )
df4plot_long
View(df4plot_long)
ggplot( data = dfParetoAll, aes( x = x, y = y, color = Category ) ) +
geom_line( )
dfParetoAll <- do.call( rbind.data.frame, ParetoDistributions )
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, y = Pareto$paretoDensity )
return( dfPareto )
} )
ParetoDistributions
df4plot_long <- na.omit(df4plot_long)
df4plot_long
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, y = Pareto$paretoDensity )
return( dfPareto )
} )
ParetoDistributions
dfParetoAll <- do.call( rbind.data.frame, ParetoDistributions )
ggplot( data = dfParetoAll, aes( x = x, y = y, color = Category ) ) +
geom_line( )
ggplot( data = dfParetoAll, aes( x = x, y = y, color = Category ) ) +
geom_line( ) +
theme_light( ) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_rect( colour = "transparent", fill = ggplot2::alpha( "white", 0.4 ) )
) +
labs( title = "PDE of raw Zdelta values", x = "Data", y = "PDE" ) +
scale_color_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ), labels = c( "Multivariate", "Univariate", "Poisened", "Perfect" ) )
PDERawZDeltas <-
ggplot( data = dfParetoAll, aes( x = x, y = y, color = Category ) ) +
geom_line( ) +
theme_light( ) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_rect( colour = "transparent", fill = ggplot2::alpha( "white", 0.4 ) )
) +
labs( title = "PDE of raw Zdelta values", x = "Data", y = "PDE" ) +
scale_color_manual( values = c( "dodgerblue", "gold", "red", "chartreuse3" ), labels = c( "Multivariate", "Univariate", "Poisened", "Perfect" ) )
skewnessGMZDeltaInsertedMissingsMultivarV <- round( skewnessGM( multivarZDeltas ), 3 )
skewnessGMZDeltaInsertedMissingsUnivarV <- round( skewnessGM( univarZDeltas ), 3 )
skewnessGMZDeltaInsertedMissingsPoisenedV <- round( skewnessGM( poisenedZDeltas ), 3 )
skewnessGMZDeltaInsertedMissingsPerfectV <- round( skewnessGM( perfectZDeltas ), 3 )
PDERawZDeltas <- PDERawZDeltas +
annotate( "text", x = Inf, y = Inf, hjust = 1.1, vjust = 1.1,
label = paste0( "GMC\n", "Multivariate: ", skewnessGMZDeltaInsertedMissingsMultivarV, "\n",
"Univariate: ", skewnessGMZDeltaInsertedMissingsUnivarV, "\n",
"Poisened: ", skewnessGMZDeltaInsertedMissingsPoisenedV, "\n",
"Perfect: ", skewnessGMZDeltaInsertedMissingsPerfectV ) )
PDERawZDeltas
library(opImputation)
all_imputation_methods
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
ggplot( data = dfParetoAll[dfParetoAll$Category != "Perfect",], aes( x = x, y = y, color = Category ) ) +
geom_line( ) +
theme_light( ) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_rect( colour = "transparent", fill = ggplot2::alpha( "white", 0.4 ) )
) +
labs( title = "PDE of raw Zdelta values", x = "Data", y = "PDE" ) +
scale_color_manual( values = c( "dodgerblue", "gold", "red"), labels = c( "Multivariate", "Univariate", "Poisened") )
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6, ImputationRepetitions = 5)
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6, ImputationRepetitions = 5)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
median(iris[,1])
median(iris[,1]) / 0.001
median(iris[,1]) * 0.001
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
library(opImputation)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
all_imputation_methods
library(opImputation)
univariate_imputation_methods <- c( "median", "mean", "mode", "rSample" )
poisened_imputation_methods <- c( "plus", "plusminus", "factor" )
perfect_imputation_methods <- "tinyNoise"
multivariate_imputation_methods <- c( "bag", "bag_repeated",
"rf_mice", "rf_mice_repeated", "rf_missForest", "rf_missForest_repeated", "miceRanger", "miceRanger_repeated",
"cart", "cart_repeated",
"linear",
"pmm", "pmm_repeated",
"knn3", "knn5", "knn7", "knn9", "knn10",
"ameliaImp", "ameliaImp_repeated",
"miImp"
)
all_imputation_methods <- c(univariate_imputation_methods,
poisened_imputation_methods,
perfect_imputation_methods,
multivariate_imputation_methods
)
TestImputationIris <- opImputation(Data = iris[,1:4],
ImputationMethods =  all_imputation_methods, nProc = 6)
TestImputation <- opImputation(Data = iris[,1:4],
ImputationMethods =  c("rf_missForest", "median", "plus" ))
dfAnnotate
df4plot_long
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "chartreuse3", "red", "gold" ) ) +
geom_hline( yintercept = minPoisened, color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = minUnivariate, color = "orange", linetype = "dotdash" ) +
annotate( geom = "text", x = dfAnnotate$x, y = dfAnnotate$y + 0.015, label = dfAnnotate$Methods, color = dfAnnotate$color )
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
rowmeanImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) mean( as.vector( x ), na.rm = TRUE ) )
# Data frame creation
df4plot_long <- generatePlotDataFrame( rowmeanImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
minPoisened <- min( df4plot_long$value[df4plot_long$color %in% "Poisened"], na.rm = TRUE )
minUnivariate <- min( df4plot_long$value[df4plot_long$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate" ), y = c( minPoisened, minUnivariate ), x = 3, color = c( "salmon", "orange" ) )
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "chartreuse3", "red", "gold" ) ) +
geom_hline( yintercept = minPoisened, color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = minUnivariate, color = "orange", linetype = "dotdash" ) +
annotate( geom = "text", x = dfAnnotate$x, y = dfAnnotate$y + 0.015, label = dfAnnotate$Methods, color = dfAnnotate$color )
df4plot_long
df4plot_long <- generatePlotDataFrame( rowmeanImputationZDeltaInsertedMissings, poisened_imputation_methods, univariate_imputation_methods, perfect_imputation_methods )
df4plot_long$Failed <- ifelse( is.na( df4plot_long$value ), 0.01, NA )
minPoisened <- min( df4plot_long$value[df4plot_long$color %in% "Poisened"], na.rm = TRUE )
minUnivariate <- min( df4plot_long$value[df4plot_long$color %in% "Univariate"], na.rm = TRUE )
df4plot_long$color <- factor(df4plot_long$color, levels = c("Multivariate", "Perfect", "Poisened", "Univariate"))
dfAnnotate <- data.frame( Methods = c( "Best poisened", "Best univariate" ), y = c( minPoisened, minUnivariate ), x = 3, color = c( "salmon", "orange" ) )
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = "zDelta (means)", y = "zDelta", x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = c( "dodgerblue", "chartreuse3", "red", "gold" ) ) +
geom_hline( yintercept = minPoisened, color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = minUnivariate, color = "orange", linetype = "dotdash" ) +
annotate( geom = "text", x = dfAnnotate$x, y = dfAnnotate$y + 0.015, label = dfAnnotate$Methods, color = dfAnnotate$color )
library(opImputation)
TestImputation <- opImputation(Data = iris[,1:4],
ImputationMethods =  c("rf_missForest", "median", "plus" ), nProc = 6)
library(opImputation)
TestImputation <- opImputation(Data = iris[,1:4],
ImputationMethods =  c("rf_missForest", "median", "plus" ), nProc = 6)
dfParetoAll
library(opImputation)
TestImputation <- opImputation(Data = iris[,1:4],
ImputationMethods =  c("rf_missForest", "median", "plus" ), nProc = 6)
TestImputation <- opImputation(Data = iris[,1:4],
ImputationMethods =  c("rf_missForest", "median", "plus", "tinyNoise" ))
