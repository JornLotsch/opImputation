rowmeanImputationZDeltaInsertedMissings <- rowMeans( meanImputationZDeltaInsertedMissings )
return( list(
ImputationZDeltaInsertedMissings = ImputationZDeltaInsertedMissings,
meanImputationZDeltaInsertedMissings = meanImputationZDeltaInsertedMissings,
rowmeanImputationZDeltaInsertedMissings = rowmeanImputationZDeltaInsertedMissings
) )
}
Zdeltas <- retrieveZdeltas( RepeatedSampleImputations = RepeatedSampleImputations )
# Create ZDelta plots
pZdeltasPlotAvgerage <- createBarplotMeanZDeltas(
meanImputationZDeltaInsertedMissings = Zdeltas$meanImputationZDeltaInsertedMissings,
poisoned_imputation_methods = poisoned_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
multivariate_imputation_methods = multivariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods,
BestMethodPerDataset = BestMethodPerDataset,
allRanks = MethodsResults$PerDatasetRanksums_insertedMissings
)
# Function to find the best univariate or multivariate method
findBestUniMultivariateMethod <- function( allRanks, imputation_methods ) {
which_best_rowmean_ranks_inserted_missings <-
names( which.min( allRanks[gsub( " imputed|Imp", "", names( allRanks ) ) %in% imputation_methods] ) )
return( which_best_rowmean_ranks_inserted_missings = which_best_rowmean_ranks_inserted_missings )
}
# Helper function for data frame creation for bar plot
generateBarPlotDataFrames <- function( data, poisoned, univariate, multivariate, perfect, BestMethodPerDataset, minmax, annotate_methods, allRanks, imputation_methods ) {
BestMethodPerDatasetDiag <- BestMethodPerDataset
if (!BestMethodPerDatasetDiag %in% c(univariate, multivariate)) {
BestMethodPerDatasetDiag <- findBestUniMultivariateMethod(allRanks, c(univariate, multivariate))
}
df <- data.frame( reshape2::melt( data ) )
df$Method <- gsub( " imputed|Imp", "", rownames( df ) )
MethodsOrder <- df$Method[order( df$value )]
df$Method <- factor( df$Method, levels = MethodsOrder )
df$Failed <- ifelse( is.na( df$value ), 0.01, NA )
df$color <- "Multivariate"
df$color[df$Method %in% gsub( " imputed", "", poisoned )] <- "Poisened"
df$color[df$Method %in% gsub( " imputed", "", univariate )] <- "Univariate"
df$color[df$Method %in% gsub( " imputed", "", perfect )] <- "Perfect"
df$color <- factor( df$color, levels = c( "Multivariate", "Perfect", "Poisened", "Univariate" ) )
names( myColorsZDelta ) <- levels( df$color )
df$perfectMtd <- ifelse(df$color == "Perfect", "Perfect methods", "Methods")
df$perfectMtd <- factor(df$perfectMtd, levels = c("Perfect methods", "Methods") )
if ( minmax == "min" ) {
minmaxPoisened <- min( df$value[df$color %in% "Poisened"], na.rm = TRUE )
minmaxUnivariate <- min( df$value[df$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = annotate_methods,
y = c( minmaxPoisened, minmaxUnivariate, df$value[df$Method == BestMethodPerDatasetDiag] ),
x = 3,
color = c( "salmon", "orange", "dodgerblue3" ) )
} else {
minmaxPoisened <- max( df$value[df$color %in% "Poisened"], na.rm = TRUE )
minmaxUnivariate <- max( df$value[df$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = annotate_methods,
y = c( minmaxPoisened, minmaxUnivariate, 0.4 ),
x = 3,
color = c( "salmon", "orange", "darkgreen" ) )
}
return( list(
dfBars = df,
dfAnnotate = dfAnnotate,
myColorsZDelta = myColorsZDelta
)
)
}
# Helper function for data frame creation for PDE plot
generatePDEPlotDataFrames <- function( multivarZDeltas, univarZDeltas, poisonedZDeltas, perfectZDeltas ) {
vZDeltas <- c( multivarZDeltas, univarZDeltas, poisonedZDeltas, perfectZDeltas )
namesvZDeltas <- c( rep( "Multivariate", length( multivarZDeltas ) ),
rep( "Univariate", length( univarZDeltas ) ),
rep( "Poisened", length( poisonedZDeltas ) ),
rep( "Perfect", length( perfectZDeltas ) ) )
df4plot_long <- cbind.data.frame( Category = namesvZDeltas, Zdelta = vZDeltas )
df4plot_long <- na.omit( df4plot_long )
# Calculate PDE xy
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, PDE = Pareto$paretoDensity )
return( dfPareto )
} )
dfParetoAll <- do.call( rbind.data.frame, ParetoDistributions )
dfParetoAll$Category <- factor( dfParetoAll$Category, levels = c( "Multivariate", "Perfect", "Poisened", "Univariate" ) )
return( dfParetoAll )
}
# Function to create a bare ZDealta bar plot
createBarplot <- function( data, poisoned_imputation_methods, univariate_imputation_methods, multivariate_imputation_methods,
perfect_imputation_methods, BestMethodPerDataset,
minmax, title, ylab, annotate_methods, allRanks ) {
# Data frame creation
df <- generateBarPlotDataFrames(
data,
poisoned_imputation_methods,
univariate_imputation_methods,
multivariate_imputation_methods,
perfect_imputation_methods,
BestMethodPerDataset,
minmax,
annotate_methods,
allRanks
)
df4plot_long <- df$dfBars
dfAnnotate <- df$dfAnnotate
myColorsZDelta <- df$myColorsZDelta
# Plotting
BarplotMeans <-
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
ggh4x::facet_grid2(.~perfectMtd , scales = "free", space = "free_x" , independent = "y") +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = title, y = ylab, x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = myColorsZDelta ) +
geom_hline( yintercept = dfAnnotate$y[1], color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = dfAnnotate$y[2], color = "orange", linetype = "dotdash" ) +
geom_hline( yintercept = dfAnnotate$y[3], color = "dodgerblue3" ) +
geom_text( data = dfAnnotate, aes( label = Methods, x = x, y = y, color = color) , inherit.aes = FALSE ) +
scale_color_manual( values = myColorsZDelta )
if ( !sum( is.na( df4plot_long$Failed ) ) == nrow( df4plot_long ) ) {
BarplotMeans <- BarplotMeans + geom_point( aes( x = Method, y = Failed ), pch = 4 )
}
return( BarplotMeans )
}
# Function to create a bare ZDelta PDE plot
createZDeltaPDEplots <- function( dfParetoAll ) {
names( myColorsZDelta ) <- levels( dfParetoAll$Category )
PDERawZDeltas <-
ggplot( ) +
geom_line( data = dfParetoAll[dfParetoAll$Category %in% c( "Multivariate", "Univariate" ),], aes( x = x, y = PDE, color = Category ) ) +
theme_light( ) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_rect( colour = "transparent", fill = ggplot2::alpha( "white", 0.4 ) )
) +
labs( title = "PDE of raw Zdelta values", x = "Data", y = "PDE" ) +
scale_color_manual( values = myColorsZDelta )
return( PDERawZDeltas )
}
# Main functions
# Function to create a bar plot of mean Zdelta values from iterations
createBarplotMeanZDeltas <-
function( meanImputationZDeltaInsertedMissings, poisoned_imputation_methods, univariate_imputation_methods,
multivariate_imputation_methods, perfect_imputation_methods, BestMethodPerDataset, allRanks ) {
rowmeanImputationZDeltaInsertedMissings <- apply( meanImputationZDeltaInsertedMissings, 1, function( x ) median( x, na.rm = TRUE ) )
BarplotMeanZDeltas <- createBarplot( data = rowmeanImputationZDeltaInsertedMissings,
poisoned_imputation_methods, univariate_imputation_methods, multivariate_imputation_methods, perfect_imputation_methods,
BestMethodPerDataset,
minmax = "min",
title = "zDelta (means)",
ylab = "zDelta",
annotate_methods = c( "Best poisoned", "Best univariate", "Best selected" ),
allRanks ) +
scale_y_continuous( trans = "log10" )
return( BarplotMeanZDeltas )
}
# Function to create a bar plot of mean GMC values from iterations
createBarplotMeanGMCs <-
function( ImputationZDeltaInsertedMissingsRaw, poisoned_imputation_methods, univariate_imputation_methods, perfect_imputation_methods ) {
dfImputationZDeltaInsertedMissingsRaw <- do.call( cbind.data.frame, ImputationZDeltaInsertedMissingsRaw )
GMCImputationZDeltaInsertedMissings <- apply( dfImputationZDeltaInsertedMissingsRaw, 1, function( x ) skewnessGM( as.vector( x ) ) )
BarplotMeanGMC <- createBarplot( data = GMCImputationZDeltaInsertedMissings,
poisoned_imputation_methods, univariate_imputation_methods, perfect_imputation_methods,
minmax = "max",
title = "GMC (means)",
ylab = "GMC",
annotate_methods = c( "Best poisoned", "Best univariate", "GMC limit" ) )
BarplotMeanGMC <- BarplotMeanGMC + geom_hline( yintercept = 0.4, color = "darkgreen" )
return( BarplotMeanGMC )
}
# Function to create a sina plot of raw Zdelta values
createZDeltasPerVarPlot <- function( meanImputationZDeltaInsertedMissings, perfect_imputation_methods ) {
rowmeanImputationZDeltaInsertedMissings <- apply( meanImputationZDeltaInsertedMissings, 1, function( x ) median( x, na.rm = TRUE ) )
df <- data.frame( reshape2::melt( rowmeanImputationZDeltaInsertedMissings ) )
df$Method <- gsub( " imputed|Imp", "", rownames( df ) )
MethodsOrder <- df$Method[order( df$value )]
zDeltaP <- data.frame( meanImputationZDeltaInsertedMissings )
zDeltaP$Method <- gsub( ' imputed|Imp', '', rownames( zDeltaP ) )
zDeltaP$Method <- factor( zDeltaP$Method, levels = MethodsOrder )
zDeltaP$perfectMtd <- ifelse(zDeltaP$Method %in%  perfect_imputation_methods, "Perfect methods", "Methods")
zDeltaP$perfectMtd <- factor(zDeltaP$perfectMtd, levels = c("Perfect methods", "Methods") )
zDelta_long <- reshape2::melt( zDeltaP )
zDelta_long$variable <- gsub( "ZDelta_", "", zDelta_long$variable )
zDelta_long$Failed <- ifelse( is.na( zDelta_long$value ), 0.01, NA )
ZDeltaPerVarPlot <-
ggplot( data = zDelta_long, aes( x = Method, y = value, color = variable ) ) +
geom_violin( ) +
geom_jitter( width = 0.05 ) +
ggh4x::facet_grid2(.~perfectMtd , scales = "free", space = "free_x" , independent = "y") +
theme_light( ) +
theme( axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = "top", legend.direction = "horizontal",
legend.background = element_rect( fill = alpha( "white", 0.5 ) ) ) +
labs( title = "Mean ZDelta per variable", x = NULL, y = "Normalized error", color = "Variable" ) +
# stat_summary( aes( y = value, ymax = after_stat( y ), ymin = after_stat( y ) ),
#               fun = median, geom = "errorbar", color = "red", width = 0.3 ) +
guides( colour = guide_legend( nrow = 1 ) ) +
scale_y_continuous( trans = "log10" )
if ( !sum( is.na( zDelta_long$Failed ) ) == nrow( zDelta_long ) ) {
ZDeltaPerVarPlot <- ZDeltaPerVarPlot + geom_point( aes( x = Method, y = Failed ), pch = 4, color = "black" )
}
return( ZDeltaPerVarPlot )
}
# Create ZDelta plots
pZdeltasPlotAvgerage <- createBarplotMeanZDeltas(
meanImputationZDeltaInsertedMissings = Zdeltas$meanImputationZDeltaInsertedMissings,
poisoned_imputation_methods = poisoned_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
multivariate_imputation_methods = multivariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods,
BestMethodPerDataset = BestMethodPerDataset,
allRanks = MethodsResults$PerDatasetRanksums_insertedMissings
)
# Constants, lists
univariate_imputation_methods <- c( "median", "mean", "mode", "rSample" )
poisoned_imputation_methods <- c( "plus", "plusminus", "factor" )
perfect_imputation_methods <- c("tinyNoise_0.000001", "tinyNoise_0.00001", "tinyNoise_0.0001", "tinyNoise_0.001", "tinyNoise_0.01",
"tinyNoise_0.05", "tinyNoise_0.1", "tinyNoise_0.2", "tinyNoise_0.5", "tinyNoise_1")
multivariate_imputation_methods <- c( "bag", "bag_repeated",
"rf_mice", "rf_mice_repeated", "rf_missForest", "rf_missForest_repeated", "miceRanger", "miceRanger_repeated",
"cart", "cart_repeated",
"linear",
"pmm", "pmm_repeated",
"knn3", "knn5", "knn7", "knn9", "knn10",
"ameliaImp", "ameliaImp_repeated",
"miImp"
)
all_imputation_methods <- c( univariate_imputation_methods,
poisoned_imputation_methods,
# perfect_imputation_methods,
multivariate_imputation_methods
)
# Omit unnecessary notes for variables to plot
utils::globalVariables( c( "ABCx", "ABCy", "Category", "Failed", "Method", "color", "rSum", "value", "variable", "x", "x1", "xloc",
"y", "y1", "BestUnivariate", "Imputation", "Multivariate", "PDE", "label", "Methods" ) )
# Colors
myColorsZDelta <- c( "#0072B2", "#009E73", "#D55E00", "#F0E442" )
myColorsABC <- c( "#009E73", "#56B4E9", "#E69F00", "red" )
# Create ZDelta plots
pZdeltasPlotAvgerage <- createBarplotMeanZDeltas(
meanImputationZDeltaInsertedMissings = Zdeltas$meanImputationZDeltaInsertedMissings,
poisoned_imputation_methods = poisoned_imputation_methods,
univariate_imputation_methods = univariate_imputation_methods,
multivariate_imputation_methods = multivariate_imputation_methods,
perfect_imputation_methods = perfect_imputation_methods,
BestMethodPerDataset = BestMethodPerDataset,
allRanks = MethodsResults$PerDatasetRanksums_insertedMissings
)
meanImputationZDeltaInsertedMissings = Zdeltas$meanImputationZDeltaInsertedMissings
poisoned_imputation_methods = poisoned_imputation_methods
univariate_imputation_methods = univariate_imputation_methods
multivariate_imputation_methods = multivariate_imputation_methods
perfect_imputation_methods = perfect_imputation_methods
BestMethodPerDataset = BestMethodPerDataset
allRanks = MethodsResults$PerDatasetRanksums_insertedMissings
allRanks
# Function to find the best univariate or multivariate method
findBestUniMultivariateMethod <- function( allRanks, imputation_methods ) {
which_best_rowmean_ranks_inserted_missings <-
names( which.min( allRanks[gsub( " imputed|Imp", "", names( allRanks ) ) %in% imputation_methods] ) )
return( which_best_rowmean_ranks_inserted_missings = which_best_rowmean_ranks_inserted_missings )
}
# Helper function for data frame creation for bar plot
generateBarPlotDataFrames <- function( data, poisoned, univariate, multivariate, perfect, BestMethodPerDataset, minmax, annotate_methods, allRanks, imputation_methods ) {
BestMethodPerDatasetDiag <- BestMethodPerDataset
if (!BestMethodPerDatasetDiag %in% c(univariate, multivariate)) {
BestMethodPerDatasetDiag <- findBestUniMultivariateMethod(allRanks, c(univariate, multivariate))
}
df <- data.frame( reshape2::melt( data ) )
df$Method <- gsub( " imputed|Imp", "", rownames( df ) )
MethodsOrder <- df$Method[order( df$value )]
df$Method <- factor( df$Method, levels = MethodsOrder )
df$Failed <- ifelse( is.na( df$value ), 0.01, NA )
df$color <- "Multivariate"
df$color[df$Method %in% gsub( " imputed", "", poisoned )] <- "Poisened"
df$color[df$Method %in% gsub( " imputed", "", univariate )] <- "Univariate"
df$color[df$Method %in% gsub( " imputed", "", perfect )] <- "Perfect"
df$color <- factor( df$color, levels = c( "Multivariate", "Perfect", "Poisened", "Univariate" ) )
names( myColorsZDelta ) <- levels( df$color )
df$perfectMtd <- ifelse(df$color == "Perfect", "Perfect methods", "Methods")
df$perfectMtd <- factor(df$perfectMtd, levels = c("Perfect methods", "Methods") )
if ( minmax == "min" ) {
minmaxPoisened <- min( df$value[df$color %in% "Poisened"], na.rm = TRUE )
minmaxUnivariate <- min( df$value[df$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = annotate_methods,
y = c( minmaxPoisened, minmaxUnivariate, df$value[df$Method == BestMethodPerDatasetDiag] ),
x = 3,
color = c( "salmon", "orange", "dodgerblue3" ) )
} else {
minmaxPoisened <- max( df$value[df$color %in% "Poisened"], na.rm = TRUE )
minmaxUnivariate <- max( df$value[df$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = annotate_methods,
y = c( minmaxPoisened, minmaxUnivariate, 0.4 ),
x = 3,
color = c( "salmon", "orange", "darkgreen" ) )
}
return( list(
dfBars = df,
dfAnnotate = dfAnnotate,
myColorsZDelta = myColorsZDelta
)
)
}
# Helper function for data frame creation for PDE plot
generatePDEPlotDataFrames <- function( multivarZDeltas, univarZDeltas, poisonedZDeltas, perfectZDeltas ) {
vZDeltas <- c( multivarZDeltas, univarZDeltas, poisonedZDeltas, perfectZDeltas )
namesvZDeltas <- c( rep( "Multivariate", length( multivarZDeltas ) ),
rep( "Univariate", length( univarZDeltas ) ),
rep( "Poisened", length( poisonedZDeltas ) ),
rep( "Perfect", length( perfectZDeltas ) ) )
df4plot_long <- cbind.data.frame( Category = namesvZDeltas, Zdelta = vZDeltas )
df4plot_long <- na.omit( df4plot_long )
# Calculate PDE xy
ParetoDistributions <- lapply( unique( df4plot_long$Category ), function( Category ) {
Pareto <- DataVisualizations::ParetoDensityEstimation( Data = df4plot_long$Zdelta[df4plot_long$Category == Category], PlotIt = FALSE )
dfPareto <- data.frame( Category = Category, x = Pareto$kernels, PDE = Pareto$paretoDensity )
return( dfPareto )
} )
dfParetoAll <- do.call( rbind.data.frame, ParetoDistributions )
dfParetoAll$Category <- factor( dfParetoAll$Category, levels = c( "Multivariate", "Perfect", "Poisened", "Univariate" ) )
return( dfParetoAll )
}
# Function to create a bare ZDealta bar plot
createBarplot <- function( data, poisoned_imputation_methods, univariate_imputation_methods, multivariate_imputation_methods,
perfect_imputation_methods, BestMethodPerDataset,
minmax, title, ylab, annotate_methods, allRanks ) {
# Data frame creation
df <- generateBarPlotDataFrames(
data,
poisoned_imputation_methods,
univariate_imputation_methods,
multivariate_imputation_methods,
perfect_imputation_methods,
BestMethodPerDataset,
minmax,
annotate_methods,
allRanks
)
df4plot_long <- df$dfBars
dfAnnotate <- df$dfAnnotate
myColorsZDelta <- df$myColorsZDelta
# Plotting
BarplotMeans <-
ggplot( data = df4plot_long, aes( x = Method, y = value ) ) +
geom_bar( aes( fill = color ), stat = "identity", position = "dodge", alpha = 0.5 ) +
ggh4x::facet_grid2(.~perfectMtd , scales = "free", space = "free_x" , independent = "y") +
theme_light( ) +
theme(
axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1 ),
legend.position = c( 0.9, 0.7 ),
legend.background = element_rect( fill = alpha( "white", 0.5 ) )
) +
labs( title = title, y = ylab, x = NULL, fill = "Imputation" ) +
scale_y_continuous( breaks = scales::pretty_breaks( ) ) +
scale_fill_manual( values = myColorsZDelta ) +
geom_hline( yintercept = dfAnnotate$y[1], color = "salmon", linetype = "dashed" ) +
geom_hline( yintercept = dfAnnotate$y[2], color = "orange", linetype = "dotdash" ) +
geom_hline( yintercept = dfAnnotate$y[3], color = "dodgerblue3" ) +
geom_text( data = dfAnnotate, aes( label = Methods, x = x, y = y, color = color) , inherit.aes = FALSE ) +
scale_color_manual( values = myColorsZDelta )
if ( !sum( is.na( df4plot_long$Failed ) ) == nrow( df4plot_long ) ) {
BarplotMeans <- BarplotMeans + geom_point( aes( x = Method, y = Failed ), pch = 4 )
}
return( BarplotMeans )
}
# Function to create a bare ZDelta PDE plot
createZDeltaPDEplots <- function( dfParetoAll ) {
names( myColorsZDelta ) <- levels( dfParetoAll$Category )
PDERawZDeltas <-
ggplot( ) +
geom_line( data = dfParetoAll[dfParetoAll$Category %in% c( "Multivariate", "Univariate" ),], aes( x = x, y = PDE, color = Category ) ) +
theme_light( ) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_rect( colour = "transparent", fill = ggplot2::alpha( "white", 0.4 ) )
) +
labs( title = "PDE of raw Zdelta values", x = "Data", y = "PDE" ) +
scale_color_manual( values = myColorsZDelta )
return( PDERawZDeltas )
}
rowmeanImputationZDeltaInsertedMissings <- apply( meanImputationZDeltaInsertedMissings, 1, function( x ) median( x, na.rm = TRUE ) )
BarplotMeanZDeltas <- createBarplot( data = rowmeanImputationZDeltaInsertedMissings,
poisoned_imputation_methods, univariate_imputation_methods, multivariate_imputation_methods, perfect_imputation_methods,
BestMethodPerDataset,
minmax = "min",
title = "zDelta (means)",
ylab = "zDelta",
annotate_methods = c( "Best poisoned", "Best univariate", "Best selected" ),
allRanks ) +
scale_y_continuous( trans = "log10" )
data = rowmeanImputationZDeltaInsertedMissings
BestMethodPerDataset
minmax = "min"
title = "zDelta (means)"
ylab = "zDelta"
annotate_methods = c( "Best poisoned", "Best univariate", "Best selected" )
df <- generateBarPlotDataFrames(
data,
poisoned_imputation_methods,
univariate_imputation_methods,
multivariate_imputation_methods,
perfect_imputation_methods,
BestMethodPerDataset,
minmax,
annotate_methods,
allRanks
)
BestMethodPerDatasetDiag <- BestMethodPerDataset
if (!BestMethodPerDatasetDiag %in% c(univariate, multivariate)) {
BestMethodPerDatasetDiag <- findBestUniMultivariateMethod(allRanks, c(univariate, multivariate))
}
poisoned =  poisoned_imputation_methods
univariate =  univariate_imputation_methods
multivariate = multivariate_imputation_methods
perfect =  perfect_imputation_methods
BestMethodPerDatasetDiag <- BestMethodPerDataset
if (!BestMethodPerDatasetDiag %in% c(univariate, multivariate)) {
BestMethodPerDatasetDiag <- findBestUniMultivariateMethod(allRanks, c(univariate, multivariate))
}
BestMethodPerDatasetDiag
df <- data.frame( reshape2::melt( data ) )
df$Method <- gsub( " imputed|Imp", "", rownames( df ) )
MethodsOrder <- df$Method[order( df$value )]
df$Method <- factor( df$Method, levels = MethodsOrder )
df$Failed <- ifelse( is.na( df$value ), 0.01, NA )
df$color <- "Multivariate"
df$color[df$Method %in% gsub( " imputed", "", poisoned )] <- "Poisened"
df$color[df$Method %in% gsub( " imputed", "", univariate )] <- "Univariate"
df$color[df$Method %in% gsub( " imputed", "", perfect )] <- "Perfect"
df$color <- factor( df$color, levels = c( "Multivariate", "Perfect", "Poisened", "Univariate" ) )
names( myColorsZDelta ) <- levels( df$color )
df$perfectMtd <- ifelse(df$color == "Perfect", "Perfect methods", "Methods")
df$perfectMtd <- factor(df$perfectMtd, levels = c("Perfect methods", "Methods") )
minmaxPoisened <- min( df$value[df$color %in% "Poisened"], na.rm = TRUE )
minmaxUnivariate <- min( df$value[df$color %in% "Univariate"], na.rm = TRUE )
dfAnnotate <- data.frame( Methods = annotate_methods,
y = c( minmaxPoisened, minmaxUnivariate, df$value[df$Method == BestMethodPerDatasetDiag] ),
x = 3,
color = c( "salmon", "orange", "dodgerblue3" ) )
df
BestMethodPerDatasetDiag
minmaxPoisened <- min( df$value[df$color %in% "Poisened"], na.rm = TRUE )
minmaxUnivariate <- min( df$value[df$color %in% "Univariate"], na.rm = TRUE )
minmaxPoisened
minmaxUnivariate
annotate_methods
c( minmaxPoisened, minmaxUnivariate, df$value[df$Method == BestMethodPerDatasetDiag] )
BestMethodPerDatasetDiag
df$Method
BestMethodPerDatasetDiag
# Function to find the best univariate or multivariate method
findBestUniMultivariateMethod <- function( allRanks, imputation_methods ) {
which_best_rowmean_ranks_inserted_missings <-
names( which.min( allRanks[gsub( " imputed|Imp", "", names( allRanks ) ) %in% imputation_methods] ) )
which_best_rowmean_ranks_inserted_missings <- gsub( " imputed|Imp", "", which_best_rowmean_ranks_inserted_missings)
return( which_best_rowmean_ranks_inserted_missings = which_best_rowmean_ranks_inserted_missings )
}
BestMethodPerDatasetDiag <- BestMethodPerDataset
if (!BestMethodPerDatasetDiag %in% c(univariate, multivariate)) {
BestMethodPerDatasetDiag <- findBestUniMultivariateMethod(allRanks, c(univariate, multivariate))
}
BestMethodPerDatasetDiag
dfAnnotate <- data.frame( Methods = annotate_methods,
y = c( minmaxPoisened, minmaxUnivariate, df$value[df$Method == BestMethodPerDatasetDiag] ),
x = 3,
color = c( "salmon", "orange", "dodgerblue3" ) )
dfAnnotate
library(opImputation)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationHepta <- opImputation(Data = data.frame(FCPS::Hepta$Data),
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
?geom_text
library(opImputation)
TestImputationHepta <- opImputation(Data = data.frame(FCPS::Hepta$Data),
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
library(opImputation)
TestImputationHepta <- opImputation(Data = data.frame(FCPS::Hepta$Data),
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
library(opImputation)
TestImputationHepta <- opImputation(Data = data.frame(FCPS::Hepta$Data),
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
library(opImputation)
TestImputationHepta <- opImputation(Data = data.frame(FCPS::Hepta$Data),
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
library(opImputation)
TestImputationHepta <- opImputation(Data = data.frame(FCPS::Hepta$Data),
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
TestImputationIrisPerfect <- opImputation(Data = iris[,1:4],
ImputationMethods =  c(all_imputation_methods, perfect_imputation_methods), nProc = nProc)
library(opImputation)
