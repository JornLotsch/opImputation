plot(log10FC ~ m2, main = "log10FC vs m2", col = myColors)
plot(density(na.omit(minusLog10_p_value / Cohen)))
plot(density(na.omit(minusLog10_p_value / (log10FC))))
layout(1)
set.seed(42)
n <- 1000
a <- rnorm(n, 5, 1)
m2 <- runif(n, min = 1, max = 9)
s2 <- runif(n, min = 1, max = 5)
SimulatedData <- lapply(1:n, function(i) {
b <- rnorm(n, m2[i], s2[i])
})
isLogList <- c(F)
treatAsLogList <- c(F)
nonParametricStatsList <- c(F)
FC_experiments <- lapply(seq_len(isLogList), function(scenario) {
isLog <- isLogList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
if (isLog) {
aFinal <- log10(a)
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
} else {
aFinal <- a
SimulatedDataFinal <- SimulatedData
}
if (treatAsLog) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) 10^x)
aFinal <- 10^aFinal
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
return(list(
log10FC = log10FC,
Effsize = Effsize,
minusLog10_p_value = minusLog10_p_value,
myColors = myColors
))
})
log10FC <- FC_experiments[[1]][["log10FC"]]
set.seed(42)
n <- 1000
a <- rnorm(n, 5, 1)
m2 <- runif(n, min = 1, max = 9)
s2 <- runif(n, min = 1, max = 5)
SimulatedData <- lapply(1:n, function(i) {
b <- rnorm(n, m2[i], s2[i])
})
isLogList <- c(F)
treatAsLogList <- c(F)
nonParametricStatsList <- c(F)
FC_experiments <- lapply(seq_len(isLogList), function(scenario) {
isLog <- isLogList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
if (isLog) {
aFinal <- log10(a)
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
} else {
aFinal <- a
SimulatedDataFinal <- SimulatedData
}
if (treatAsLog) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) 10^x)
aFinal <- 10^aFinal
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
return(list(
log10FC = log10FC,
Effsize = Effsize,
minusLog10_p_value = minusLog10_p_value,
myColors = myColors
))
})
FC_experiments
scenario
FC_experiments
isLogList
isLog <- isLogList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
if (isLog) {
aFinal <- log10(a)
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
} else {
aFinal <- a
SimulatedDataFinal <- SimulatedData
}
aFinal
SimulatedDataFinal
if (treatAsLog) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) 10^x)
aFinal <- 10^aFinal
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
FC
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
isLogList <- c(F)
treatAsLogList <- c(F)
nonParametricStatsList <- c(F)
FC_experiments <- lapply(seq_len(isLogList), function(scenario) {
isLog <- isLogList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
if (isLog) {
aFinal <- log10(a)
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
} else {
aFinal <- a
SimulatedDataFinal <- SimulatedData
}
if (treatAsLog) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) 10^x)
aFinal <- 10^aFinal
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
return(list(
log10FC = log10FC,
Effsize = Effsize,
minusLog10_p_value = minusLog10_p_value,
myColors = myColors
))
})
FC_experiments
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
EffectStats
log10FC <- unlist(FC)
log10FC
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
seq_len(isLogList)
isLogList
len«µth(isLogList)
isLogList
isLogList <- c(F)
treatAsLogList <- c(F)
nonParametricStatsList <- c(F)
length(isLogList)
FC_experiments <- lapply(1:length(isLogList), function(scenario) {
isLog <- isLogList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
if (isLog) {
aFinal <- log10(a)
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
} else {
aFinal <- a
SimulatedDataFinal <- SimulatedData
}
if (treatAsLog) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) 10^x)
aFinal <- 10^aFinal
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
return(list(
log10FC = log10FC,
Effsize = Effsize,
minusLog10_p_value = minusLog10_p_value,
myColors = myColors
))
})
FC_experiments
library(spdep)
library(bayestestR)
library(effsize)
library(rstatix)
library(scatterplot3d)
set.seed(42)
n <- 1000
a <- rnorm(n, 5, 1)
m2 <- runif(n, min = 1, max = 9)
s2 <- runif(n, min = 1, max = 5)
SimulatedData <- lapply(1:n, function(i) {
b <- rnorm(n, m2[i], s2[i])
})
isLogList <- c(F)
treatAsLogList <- c(F)
nonParametricStatsList <- c(F)
FC_experiments <- lapply(1:length(isLogList), function(scenario) {
isLog <- isLogList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
if (isLog) {
aFinal <- log10(a)
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
} else {
aFinal <- a
SimulatedDataFinal <- SimulatedData
}
if (treatAsLog) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) 10^x)
aFinal <- 10^aFinal
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Cohen = Cohen, p_value = p_value))
})
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
return(list(
log10FC = log10FC,
Effsize = Effsize,
minusLog10_p_value = minusLog10_p_value,
myColors = myColors
))
})
log10FC <- FC_experiments[[1]][["log10FC"]]
Effsize <- FC_experiments[[1]][["Effsize"]]
minusLog10_p_value <- FC_experiments[[1]][["minusLog10_p_value"]]
myColors <- FC_experiments[[1]][["myColors"]]
# Plot effect sizes etc
layout(matrix(c(1:12), 3, 4, byrow = T))
scatterplot3d(x = m2, y = s2, z = log10FC, angle = 110, main = paste0("m1 = ", round(mean(a), 2), ", s1 = ", round(sd(a), 2)), color = myColors)
scatterplot3d(x = m2, y = s2, z = Cohen, angle = 110, main = paste0("m1 = ", round(mean(a), 2), ", s1 = ", round(sd(a), 2)), color = myColors)
scatterplot3d(y = Cohen, x = log10FC, z = minusLog10_p_value, angle = 110, main = "log10FC vs Cohen's d vs -log10(TTest_p)", color = myColors)
plot(minusLog10_p_value ~ Cohen, main = "-log10(TTest_p) vs Cohen's d", col = myColors)
abline(h = -log10(0.05 / n))
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
abline(h = -log10(0.05 / n))
plot(Cohen ~ log10FC, main = "Cohen's d vs log10FC", col = myColors)
plot(Cohen ~ s2, main = "Cohen's d vs s2", col = myColors)
plot(minusLog10_p_value ~ s2, main = "-log10(TTest_p) vs s2", col = myColors)
plot(log10FC ~ s2, main = "log10FC vs s2", col = myColors)
plot(log10FC ~ m2, main = "log10FC vs m2", col = myColors)
plot(density(na.omit(minusLog10_p_value / Cohen)))
plot(density(na.omit(minusLog10_p_value / (log10FC))))
layout(1)
layout(matrix(c(1:4), 1, 4, byrow = T))
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
library(spdep)
library(bayestestR)
library(effsize)
library(rstatix)
library(scatterplot3d)
isLogList <-              c(F, T, T, T, T, T, T)
logTransList <-           c(F, F, F, T, T, T, T)
treatAsLogList <-         c(F, F, F, F, F, T, T)
nonParametricStatsList <- c(F, F, T, F, T, F, T)
n <- 100
m2 <- runif(n, min = 1, max = 9)
s2 <- runif(n, min = 1, max = 5)
FC_experiments <- lapply(1:length(isLogList), function(scenario) {
isLog <- isLogList[scenario]
logTrans <- logTransList[scenario]
treatAsLog <- treatAsLogList[scenario]
nonParametricStats <- nonParametricStatsList[scenario]
set.seed(42)
if (isLog) {
a <- rlnorm(n, 5, 1)
SimulatedData <- lapply(1:n, function(i) {
b <- rlnorm(n, m2[i], s2[i])
})
} else {
a <- rnorm(n, 5, 1)
SimulatedData <- lapply(1:n, function(i) {
b <- rnorm(n, m2[i], s2[i])
})
}
if (logTrans) {
SimulatedDataFinal <- lapply(SimulatedData, function(x) log10(x))
aFinal <- log10(a)
} else {
SimulatedDataFinal <- SimulatedData
aFinal <- a
}
if (treatAsLog) {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x)) - log10(median(aFinal))
} else {
log10(mean(x)) - log10(mean(aFinal))
}
})
} else {
FC <- lapply(SimulatedDataFinal, function(x) {
if (nonParametricStats) {
log10(median(x) / median(aFinal))
} else {
log10(mean(x) / mean(aFinal))
}
})
}
EffectStats <- lapply(1:n, function(i) {
b <- SimulatedDataFinal[[i]]
a <- aFinal
Effsize <- abs(cohen.d(b, a)$estimate)
if (nonParametricStats) {
p_value <- -log10(wilcox.test(b, a)$p.value)
} else {
p_value <- -log10(t.test(b, a)$p.value)
}
return(list(i = i, Effsize = Effsize, p_value = p_value))
})
log10FC <- unlist(FC)
Effsize <- unlist(lapply(EffectStats, "[[", "Effsize"))
minusLog10_p_value <- unlist(lapply(EffectStats, "[[", "p_value"))
myColors <- c("red", "black")[ifelse(minusLog10_p_value > -log10(0.05 / n), 1, 2)]
return(list(
log10FC = log10FC,
Effsize = Effsize,
minusLog10_p_value = minusLog10_p_value,
myColors = myColors
))
})
# Plot effect sizes with different versions
layout(matrix(c(1:8), 2, 4, byrow = F))
# log as non-log, parametric
log10FC <- FC_experiments[[2]][["log10FC"]]
minusLog10_p_value <- FC_experiments[[2]][["minusLog10_p_value"]]
myColors <- FC_experiments[[2]][["myColors"]]
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
# log as non-log, non-parametric
log10FC <- FC_experiments[[3]][["log10FC"]]
minusLog10_p_value <- FC_experiments[[3]][["minusLog10_p_value"]]
myColors <- FC_experiments[[3]][["myColors"]]
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
# log as log, parametric
log10FC <- FC_experiments[[4]][["log10FC"]]
minusLog10_p_value <- FC_experiments[[4]][["minusLog10_p_value"]]
myColors <- FC_experiments[[4]][["myColors"]]
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
# log as log, non-parametric
log10FC <- FC_experiments[[5]][["log10FC"]]
minusLog10_p_value <- FC_experiments[[5]][["minusLog10_p_value"]]
myColors <- FC_experiments[[5]][["myColors"]]
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
# log as log, non-parametric
log10FC <- FC_experiments[[6]][["log10FC"]]
minusLog10_p_value <- FC_experiments[[6]][["minusLog10_p_value"]]
myColors <- FC_experiments[[6]][["myColors"]]
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
# log as log, non-parametric
log10FC <- FC_experiments[[7]][["log10FC"]]
minusLog10_p_value <- FC_experiments[[7]][["minusLog10_p_value"]]
myColors <- FC_experiments[[7]][["myColors"]]
plot(minusLog10_p_value ~ log10FC, main = "-log10(TTest_p) vs log10FC", col = myColors)
layout(1)
